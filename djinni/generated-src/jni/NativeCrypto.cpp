// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from loginSystem.djinni

#include "NativeCrypto.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeCrypto::NativeCrypto() : ::djinni::JniInterface<::crypto::Crypto, NativeCrypto>("com/mycompany/crypto/Crypto$CppProxy") {}

NativeCrypto::~NativeCrypto() = default;


CJNIEXPORT void JNICALL Java_com_mycompany_crypto_Crypto_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::crypto::Crypto>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_mycompany_crypto_Crypto_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::crypto::Crypto::create();
        return ::djinni::release(::djinni_generated::NativeCrypto::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_mycompany_crypto_Crypto_00024CppProxy_native_1getHelloWorld(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::crypto::Crypto>(nativeRef);
        auto r = ref->get_hello_world();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
